#!/usr/bin/env sh

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

if command -v sketchybar &>/dev/null; then
  # Check the display size (e.g., grab the resolution here)
  display_resolution=$(system_profiler SPDisplaysDataType | grep Resolution)
  # First condition is to match my macbook pro, the * are used as wildcards
  if [[ "$display_resolution" == *"3024 x 1964"* ]]; then
    yabai -m config top_padding 8
  elif [[ "$display_resolution" == *"4096 x 2304"* ]]; then
    yabai -m config top_padding 20
  else
    yabai -m config top_padding 0
  fi
fi

# global settings
yabai -m config mouse_follows_focus off
yabai -m config focus_follows_mouse off
yabai -m config window_origin_display default
yabai -m config window_placement second_child
yabai -m config window_topmost off
yabai -m config window_shadow off
yabai -m config window_opacity off
yabai -m config window_opacity_duration 2000.0
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.85
yabai -m config window_border off
yabai -m config window_border_width 4
yabai -m config active_window_border_color 0xff775759
yabai -m config normal_window_border_color 0xff555555
yabai -m config insert_feedback_color 0xffd75f5f
yabai -m config split_ratio 0.50
yabai -m config auto_balance off
yabai -m config mouse_modifier fn
yabai -m config mouse_action1 move
yabai -m config mouse_action2 resize
yabai -m config mouse_drop_action swap

# general space settings
yabai -m config layout bsp
yabai -m config bottom_padding 0
yabai -m config left_padding 0
yabai -m config right_padding 0
yabai -m config window_gap 0

# focus window after active space changes
yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

# focus window after active display changes
yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

# focus window after window is destroyed
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# focus window after application is terminated
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

# Disable specific apps from being managed
yabai -m rule --add app="^(Raycast|腾讯会议)$" manage=off
yabai -m rule --add title="(Hammerspoon Console)" manage=off

echo "yabai configuration loaded.."
